// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"encoding/json"

	"github.com/mantlenetworkio/mantle/mt-bindings/solc"
)

const SequencerFeeVaultStorageLayoutJSON = "{\"storage\":[{\"astId\":1000,\"contract\":\"contracts/L2/SequencerFeeVault.sol:SequencerFeeVault\",\"label\":\"totalProcessed\",\"offset\":0,\"slot\":\"0\",\"type\":\"t_uint256\"}],\"types\":{\"t_uint256\":{\"encoding\":\"inplace\",\"label\":\"uint256\",\"numberOfBytes\":\"32\"}}}"

var SequencerFeeVaultStorageLayout = new(solc.StorageLayout)

var SequencerFeeVaultDeployedBin = "0x6080604052600436106100695760003560e01c806384411d651161004357806384411d651461010c578063d3e5792b14610130578063d4ff92181461016457600080fd5b80630d9019e1146100755780633ccfd60b146100d357806354fd4d50146100ea57600080fd5b3661007057005b600080fd5b34801561008157600080fd5b506100a97f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156100df57600080fd5b506100e8610197565b005b3480156100f657600080fd5b506100ff6103bb565b6040516100ca9190610615565b34801561011857600080fd5b5061012260005481565b6040519081526020016100ca565b34801561013c57600080fd5b506101227f000000000000000000000000000000000000000000000000000000000000000081565b34801561017057600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006100a9565b7f0000000000000000000000000000000000000000000000000000000000000000471015610271576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f4665655661756c743a207769746864726177616c20616d6f756e74206d75737460448201527f2062652067726561746572207468616e206d696e696d756d207769746864726160648201527f77616c20616d6f756e7400000000000000000000000000000000000000000000608482015260a40160405180910390fd5b600047905080600080828254610287919061065e565b9091555050604080518281527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166020820152338183015290517fc8a211cc64b6ed1b50595a9fcb1932b6d1e5a6e8ef15b60e5b1f988ea9086bba9181900360600190a1604080516020810182526000815290517f62a847dd000000000000000000000000000000000000000000000000000000008152734200000000000000000000000000000000000010916362a847dd918491610386917f0000000000000000000000000000000000000000000000000000000000000000916188b891859190600401610676565b6000604051808303818588803b15801561039f57600080fd5b505af11580156103b3573d6000803e3d6000fd5b505050505050565b60606103e67f000000000000000000000000000000000000000000000000000000000000000061045e565b61040f7f000000000000000000000000000000000000000000000000000000000000000061045e565b6104387f000000000000000000000000000000000000000000000000000000000000000061045e565b60405160200161044a939291906106c1565b604051602081830303815290604052905090565b6060816000036104a157505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b81156104cb57806104b581610737565b91506104c49050600a8361079e565b91506104a5565b60008167ffffffffffffffff8111156104e6576104e66107b2565b6040519080825280601f01601f191660200182016040528015610510576020820181803683370190505b5090505b8415610593576105256001836107e1565b9150610532600a866107f8565b61053d90603061065e565b60f81b8183815181106105525761055261080c565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061058c600a8661079e565b9450610514565b949350505050565b60005b838110156105b657818101518382015260200161059e565b838111156105c5576000848401525b50505050565b600081518084526105e381602086016020860161059b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061062860208301846105cb565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082198211156106715761067161062f565b500190565b73ffffffffffffffffffffffffffffffffffffffff8516815263ffffffff841660208201528260408201526080606082015260006106b760808301846105cb565b9695505050505050565b600084516106d381846020890161059b565b80830190507f2e00000000000000000000000000000000000000000000000000000000000000808252855161070f816001850160208a0161059b565b6001920191820152835161072a81600284016020880161059b565b0160020195945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036107685761076861062f565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826107ad576107ad61076f565b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000828210156107f3576107f361062f565b500390565b6000826108075761080761076f565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea164736f6c634300080f000a"

func init() {
	if err := json.Unmarshal([]byte(SequencerFeeVaultStorageLayoutJSON), SequencerFeeVaultStorageLayout); err != nil {
		panic(err)
	}

	layouts["SequencerFeeVault"] = SequencerFeeVaultStorageLayout
	deployedBytecodes["SequencerFeeVault"] = SequencerFeeVaultDeployedBin
}
